name: Python CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - develop
      - feature/*
    tags:
      - 'v*.*.*'

jobs:
#  test:
#
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macos-latest, ubuntu-latest, windows-latest]
#        python-version: [3.7, 3.8]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Setup Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - uses: actions/cache@v1
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-
#      - name: Install dependencies
#        run: python -m pip install --upgrade pip setuptools wheel
#      - name: Install Tox and any other packages
#        run: pip install tox
#      - name: Run Tox
#        # Run tox using the version of Python in `PATH`
#        run: tox -e py -- junit/test-results-${{ matrix.python-version }}.xml
#      - name: Upload pytest test results
#        uses: actions/upload-artifact@v1
#        with:
#          name: pytest-results-${{ matrix.python }}
#          path: junit/test-results-${{ matrix.python-version }}.xml
#        # Use always() to always run this step to publish test results when there are test failures
#        if: ${{ always() }}

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
         username: ${{ github.repository_owner }}
         password: ${{ secrets.GITHUB_TOKEN }}
         registry: docker.pkg.github.com
         repository: ${{github.repository}}/mypackage
         tag_with_ref: true
         tag_with_sha: true
         add_git_labels: true
         push: ${{ startsWith(github.ref, 'refs/tags/') }}
         build_args: PYTHON_VERSION=3.8
